{
  "title": "How to save and load from json",
  "description": "There are times you want to save or load data and json is one of the options",
  "text": "Json is one of the options you have to save and load data and to do that you can create a server that takes care of it here is the one i made:\n\nSave data as a json file service\n[code] \n//Server to create json files\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DownloadToolService {\n  a = document.createElement('a');\n  constructor() {}\n\n  //This creates a json file with the given data\n  DownloadTextToFileAsJson(theText: any, fileName: string): void {\n    if (theText == null) {\n      console.log('No Data');\n      return;\n    }\n    var blob = new Blob([JSON.stringify(theText, null, 2)], {\n      type: 'application/json',\n    });\n    var url = window.URL.createObjectURL(blob);\n    this.a.href = url;\n    this.a.download = fileName + '.json';\n    this.a.click();\n    window.URL.revokeObjectURL(url);\n  }\n}\n[/code]\nThen this would be how you use it to create json files or use the HttpClient to load from those json files\n[code] \n//Some other component using HttpClient to load the data or create data\nimport { Component, OnInit} from '@angular/core';\nimport { DownloadToolService } from 'src/app/library/download-tool/download-tool.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-other-base',\n  templateUrl: './topic-other.component.html',\n  styleUrls: ['./topic-other.component.css'],\n})\nexport abstract class OtherComponent {\n\n  jsonPath: string = 'assets/json/';\n  allData : any[] = []\n  fileNames : string[] = ['someName','someOtherName']; \n  constructor(private downloadTool: DownloadToolService,private http: HttpClient) {}\n\n  //Get the  Data from Json files\n  getJsonData(): any[] {\n    //Check it the files were already loaded if so return them\n    if (this.allData != null && this.allData.length > 0) {\n      return this.allData;\n    }\n    // Get all the files that are in the file names\n    for (let i = 0; i < this.fileNames.length; i++) {\n      this.http\n        .get<any>(`${this.jsonPath}${this.fileNames[i]}.json`)\n        .subscribe((data) => {          \n         this.allData.push(data);         \n        });\n    }\n    return this.allData;\n  }  \n  //Create the json file with the given data and the given file name\n  downloadAsJsonFile(data:any,fileName:string): void {\n    this.downloadTool.DownloadTextToFileAsJson(data,fileName);\n  }\n}\n[/code]\n\nI used this to create the topics for this page (if it still has the data in json files and not moved them to a normal backend)",
  "content": []
}