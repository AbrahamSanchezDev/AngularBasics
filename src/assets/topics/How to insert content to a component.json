{
  "title": "How to insert content to a component",
  "description": "There are times you want to insert some content to a component you use the ngcontent.",
  "text": "There are times what you have some dynamic component that may or not have some content and for that one option while using angular it's the ng-content.\nHere is how it would look the component that has the ng-content :\n[code] \n//Ts File (empty)\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to-ng-content',\n  templateUrl: './how-to-ng-content.component.html',\n  styleUrls: ['./how-to-ng-content.component.css'],\n})\nexport class HowToNgContentComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n\n//Html   \n<div>\n  <h1>This would be the main content Title</h1>\n  <p>Intro text or some other content</p>\n  <ng-content></ng-content>\n  <p>Some other ending content</p>\n</div>\n[/code]\n\nAnd it would normally look like this with just using the component just by using the  \"<app-how-to-ng-content></app-how-to-ng-content>\"\n<img src=\"https://i.imgur.com/LlUFkeR.png\"/>\n\nHere is some other component using the first component \n[code] \n//Ts File\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-some-other-parent',\n  templateUrl: './some-other-parent.component.html',\n  styleUrls: ['./some-other-parent.component.css'],\n})\nexport class SomeOtherParentComponent implements OnInit {\n  pathToImg: string = 'https://miro.medium.com/max/2800/0*rDChHWWLHxxpXI0a.png';\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n//Html\n<div>\n  <app-how-to-ng-content>\n    <h2>This is added from some other component</h2>\n    <img src=\"{{ pathToImg }}\" alt=\"Angular!\" style=\"height: 150px;\" />\n  </app-how-to-ng-content>\n</div>\n[/code]\nHere is how it would be displayed:\n<img src=\"https://i.imgur.com/bj3Eej8.png\"/>",
  "content": []
}
