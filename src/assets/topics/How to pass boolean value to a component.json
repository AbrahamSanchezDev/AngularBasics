{
  "title": "How to pass boolean value to a component",
  "description": "This will show you the synthesis to pass a boolean variable to another angular commponet",
  "text": "To be able to change a variable to a component the variable in the component has to be marked with @Input before the variable so it can receive changes.\nThe normal synthesis would be something like <app-theappname variableName = \"the value i want to give it\"></app-theappname> .\nBut with some variables like in this example boolean if you use the same synthesis you would get an error , here is how to get it working:\n\n[code] \n//Ts Child component\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-other',\n  templateUrl: './other.component.html',\n  styleUrls: ['./other.component.css'],\n})\nexport class OtherComponent implements OnInit {\n  @Input() show: boolean;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  //Display the variable show value\n  getText(): string {\n    return `It is  \" ${this.show} \" right now`;\n  }\n}\n\n[/code]\n[code] \n//Html\n<div>\n  <p>This value is : {{ show }}</p>\n  <p [innerText]=\"getText()\"></p>\n</div>\n[/code]\n\nThis is how it would normally look like when you haven't given a value to the show variable:\n<img src=\"https://i.imgur.com/kKl6eNE.png\"/>\n\nAnd when you use that component in some other component it would be something like this:\n[code] \n//Ts File\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-how-to-pass-bool',\n  templateUrl: './how-to-pass-bool.component.html',\n  styleUrls: ['./how-to-pass-bool.component.css'],\n})\nexport class HowToPassBoolComponent implements OnInit {\n  parentShow: boolean = true;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n[/code]\n[code] \n//Html\n<div>\n  <app-other [show]=\"parentShow\"></app-other>\n</div>\n[/code]\n<img src=\"https://i.imgur.com/bzsg9Sh.png\"/>\nAnd if you change the parentShow to false then: \n<img src=\"https://i.imgur.com/hiJALRX.png\"/>\n\nSo to summarize you have to change the variableName =\"\" to [variableName] = \"\". \n",
  "content": []
}